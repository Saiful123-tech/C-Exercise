Print 1 To N Without Loop

public void printNos(int N)
    {
        //Your code here
        if(N==0){
            return;
        }
        printNos(N-1);
        Console.Write(N);
        Console.Write(" ");
    }

Print GFG n times

public void printGfg(int N)
    {
        //Your code here
        if(N==0){
            return;
        }
        Console.Write("GFG ");
        printGfg(N-1);
    }

TC o(n)
SC o(n) recursive

 public void printNos(int N)
    {
        //Your code here
        if(N==0){
            return;
        }
        Console.Write(N);
        Console.Write(" ");
        printNos(N-1);
    }

TC o(n)
SC o(n) recursive

Sum of First N numbers
long long int firstN(int n) {
    // Write your code here.
    if(n==0){
        return 0;
    }
    return n + firstN(n-1);
}
TC o(n) SC o(n)

Check Palindrome
public class Solution {
    public bool IsValid(string s,int i){
       if(i>=s.Length/2){
        return true;
       }
       if(s[i]!=s[s.Length-i-1]){
        return false;
       }
       return IsValid(s,i+1);
    }
    public bool IsPalindrome(string s) {
        s = s.ToLower();
        for(int i=0;i<s.Length;i++){
           if((s[i]>='a' && s[i]<='z') || (s[i]>='0' && s[i]<='9')){
                continue;
           }
         s = s.Remove(i,1);
         i--;
         }
         return IsValid(s,0);
    }
}


Reverse a Array using Recursion
 public void reverseArray(int[] arr, int start, int end)
        {
            if (start >= end)
                return;
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            reverseArray(arr, start + 1, end - 1);
        }
        public static void Main(string[] args)
        {
            int[] arr = new int[] { 1, 2, 3, 4, 5 };
            Program obj1 = new Program();
            obj1.reverseArray(arr, 0, 4);
            foreach(var item in arr)
            {
                Console.WriteLine(item);
            }
            

        }

Fibonacci Number
public class Solution {
    public int Fib(int n) {
        if(n<=1){
            return n;
        }
        return Fib(n-1) + Fib(n-2);
    }
}
TC o(2power(n))
SC o(N)
